; Tests of type variable renaming.

(define unit unit (while #f 0))

; A DIY value of any type.
(define (forall ('a) (unit -> 'a)) undefined
  (type-lambda ('a)
    (lambda ((_ : unit))
            ((@ car 'a) (@ nil 'a)))))

; Some simple tests to ensure type variables' names don't matter.
; First, if this function typechecks, type substitition is doing
; something right.
(define (forall ('a 'b) ('a -> 'b)) test-naming
  (type-lambda ('c 'd)
    (lambda ((_ : 'c))
      ((@ undefined 'd) unit))))

; Also check that its type can be unified directly with another
; syntactic type.
(check-type test-naming (forall ('e 'f) ('e -> 'f)))

; Now, check that captures are avoided.
(define (forall ('a) ('a -> (forall ('a) 'a))) test-capture
  ; Change the name of the type variable to make it less likely that bugs will
  ; slip by.
  (type-lambda ('b)
    (lambda ((_ : 'b))
      (type-lambda ('b)
                   ((@ undefined 'b) unit)))))

(check-type test-capture (forall ('c) ('c -> (forall ('d) 'd))))
(check-type test-capture (forall ('c) ('c -> (forall ('c) 'c))))
